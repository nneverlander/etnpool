upstream websocket {
    server localhost:8887;
 }

server {
        listen 8888  ssl;
        # Make site accessible from http://localhost/
        server_name proxy.etnminer.xyz;

        location / {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
        }
# managed by Certbot
        ssl_certificate /etc/letsencrypt/live/proxy.etnminer.xyz/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/proxy.etnminer.xyz/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
	listen 9999 default_server ssl;
	listen [::]:9999 default_server ssl;

	# Make site accessible from http://localhost/
	server_name proxy.etnminer.xyz;

	location / {
	proxy_pass http://localhost:9998;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}
# managed by Certbot
	ssl_certificate /etc/letsencrypt/live/proxy.etnminer.xyz/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/proxy.etnminer.xyz/privkey.pem; # managed by Certbot
    	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

}
